#       Copyright 2022-2023 Kyndryl Corp, All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

#########################
# Quarkus Configuration #
#########################

# Dump config info, useful for debugging
quarkus.config-tracking.enabled=true

# Configure http port:
quarkus.http.port=9080

##############################
# Quarkus Role Configuration #
##############################
# This recreates what we had in OpenLiberty where all authenticated users have access to everything
# TODO: need to handle StockViewer, too
quarkus.http.auth.policy.stocktrader.roles-allowed=StockTrader
quarkus.http.auth.permission.permit1.paths=/account/*
quarkus.http.auth.permission.permit1.policy=authenticated

quarkus.http.auth.policy.stockviewer.roles-allowed=StockViewer
quarkus.http.auth.permission.permit2.paths=/account/*
quarkus.http.auth.permission.permit2.policy=authenticated


###########
# MQ info #
###########
%dev.mq.host=b-27bf4b64-0550-47ad-81b9-dfe28f0729d1-1.mq.us-east-2.amazonaws.com
%dev.mq.port=5671
%dev.mq.id=stocktradermquser
%dev.mq.password=St0ckTr4d3r!
%dev.messaging.enabled=true
mq.host=${MQ_HOST}
mq.port=${MQ_PORT}
mq.id=${MQ_ID}
mq.password=${MQ_PASSWORD}
messaging.enabled=${MESSAGING_ENABLED:false}

#################
# Watson config #
#################
%dev.watson.id=myid
%dev.watson.pwd=dfkldjf
%dev.watson.url=https://api.us-south.tone-analyzer.watson.cloud.ibm.com/instances/195be178-5f78-467f-8355-99ee5772f4c2/v3/tone?version=2017-09-21&sentences=false
watson.id=${WATSON_ID}
watson.url=${WATSON_URL}
watson.pwd=${WATSON_PWD}

###################
# Cloudant config #
###################
%dev.cloudant.id=admin
%dev.cloudant.url=http://admin:TTLU44DoBCSo@ip-10-2-9-14.us-east-2.compute.internal:5984
%dev.cloudant.password=TTLU44DoBCSo
%dev.cloudant.db=account
cloudant.id=${CLOUDANT_ID}
cloudant.url=${CLOUDANT_URL}
cloudant.password=${CLOUDANT_PASSWORD}
cloudant.db=${CLOUDANT_DB:account}

##############
# ODM Config #
##############
%dev.odm.url=https://mvrpkpd420.execute-api.us-east-2.amazonaws.com/default/GetLoyaltyLevel
odm.url=${ODM_URL}


####################################################################
# Configures the Qpid JMS for AMQP provider with properties above. #
####################################################################
quarkus.qpid-jms.url=amqps://${mq.host}:${mq.port}
quarkus.qpid-jms.username=${mq.id}
quarkus.qpid-jms.password=${mq.password}
quarkus.qpid-jms.wrap=true

##############
# JWT Config #
##############

# Common Config
mp.jwt.verify.publickey.location=classpath:META-INF/resources/keys/trust.p12
mp.jwt.verify.issuer=${JWT_ISSUER:http://stock-trader.ibm.com}
mp.jwt.verify.audiences=${JWT_AUDIENCE:stock-trader}
mp.jwt.decrypt.key.location=classpath:META-INF/resources/keys/key.p12
smallrye.jwt.keystore.type=PKCS12
smallrye.jwt.keystore.password=St0ckTr@der
smallrye.jwt.keystore.verify.key.alias=jwtSigner
smallrye.jwt.keystore.decrypt.key.password=St0ckTr@der
smallrye.jwt.keystore.decrypt.key.alias=jwtSigner

# TODO fix the item below for native builds to work
#quarkus.native.resources.includes=./key.pem

##############################
# Rest Client configurations
##############################
quarkus.rest-client.odm-client-config.url=${odm.url}
quarkus.rest-client.watson-client-config.url=${watson.url}



quarkus.log.file.enable=true
# Send output to a trace.log file under the /tmp directory
quarkus.log.file.path=/tmp/trace.log
quarkus.log.file.level=TRACE
quarkus.log.file.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
# Set 2 categories (io.quarkus.smallrye.jwt, io.undertow.request.security) to TRACE level
quarkus.log.min-level=TRACE
quarkus.log.category."io.quarkus.smallrye.jwt".level=TRACE
quarkus.log.category."com.ibm.hybrid".level=TRACE
quarkus.log.category."io.undertow.request.security".level=TRACE
quarkus.rest-client.logging.scope=request-response

quarkus.log.console.level=DEBUG
quarkus.log.category."org.jboss.resteasy.reactive".level=DEBUG
quarkus.log.category."WebApplicationException".level=DEBUG
quarkus.log.category."io.quarkus.resteasy.reactive".level=DEBUG
quarkus.log.category."io.vertx.core.http.impl.Http1xServerRequest".level=DEBUG
